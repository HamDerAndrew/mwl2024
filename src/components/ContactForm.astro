---

---

<div class="container mx-auto px-8 flex justify-center gap-2 pt-32 relative">
  <!--Contact form -->
  <div class="w-7/12">
    <form class="flex justify-center">
      <div class="w-full xl:text-3xl">
        <div class="mb-5">
          <input id="name" type="text" placeholder="Name" class=" bg-transparent border-2 mwl-border rounded w-full p-2 placeholder:text-white focus:ring focus:ring-blue-900 " />
        </div>
        <div class="mb-5">
          <input id="email" type="email" placeholder="Email" class="bg-transparent border-2 mwl-border rounded w-full p-2 placeholder:text-white focus:ring focus:ring-blue-900 " />
        </div>
        <div class="mb-5">
          <textarea id="message" class="bg-transparent border-2 mwl-border rounded w-full p-2 md:h-96 placeholder:text-white focus:ring focus:ring-blue-900 " placeholder="Message"></textarea>
        </div>
        <button class="w-full py-3 mwl-border border-2 hover:bg-yellow-400 rounded text-white" role="button" type="submit">Send</button>
      </div>
    </form>
  </div>
  <!--Let us talk splash art -->
  <div class="bg-transparent border-2 mwl-border relative md:flex md:justify-center md:items-center md:w-5/12 md:rounded md:overflow-hidden hidden">
    <div class="circle circle-top invisible"></div>
    <p class="md:text-6xl text-2xl text-white">Let's Talk!</p>
    <div class="circle circle-bottom invisible"></div>
  </div>
</div>

<style>
.mwl-background {
	background: var(--mwl-purple);
}

.mwl-border {
	border-color: var(--mwl-purple);
}

button:hover {
	background-color: var(--mwl-purple);
	transition: .3s ease-in;
}

.circle {
	position: absolute;
	width: 60px;
	height: 60px;
	border-radius: 50%;
	background-color: var(--mwl-yellow);
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
}

.circle-top-name {
	top: 10%;
	left: 20%;
	transition: all .4s ease-in-out;
}

.circle-bot-name {
	top: 90%;
	left: 80%;
	transition: all .4s ease-in-out;
}

.circle-top-email {
	top: 50%;
	left: 65%;
	transition: all .4s ease-in-out;
}

.circle-bot-email {
	top: 20%;
	left: 45%;
	transition: all .4s ease-in-out;
}


.circle-top-message {
	top: 20%;
	left: 45%;
	transition: all .4s ease-in-out;
}

.circle-bot-message {
	top: 80%;
	left: 45%;
	transition: all .4s ease-in-out;
}

.name-animation {
	padding: 50px;
}
</style>

<script>
	document.addEventListener('astro:page-load', (event) => {
		const currentPath = window.location.pathname.slice(1) // Removing the "/" from path
    // the double contact check is temporary. In prod there is a trailing / and that is not present in dev
		if(currentPath === "" || (currentPath === "contact" || currentPath === "contact/")) {
			myAnimation()
		}
	})

	function myAnimation() {
		const formName = document.getElementById("name");
		const formEmail = document.getElementById("email");
		const formMessage = document.getElementById("message");
		const circleTop = document.querySelector(".circle-top");
		const circleBottom = document.querySelector(".circle-bottom");

		/*
		TODO:
		This can be refactored into a single function.
		This should always remove other classes from previous animations of the circle (ex circle-top-name should remove circle-top-email)
		*/

		//1. Add event listener to the name input
		formName.addEventListener("click", (event) => {
			// cleanup
			circleTop.classList.remove("circle-top-email", "circle-top-message" )
			circleBottom.classList.remove("circle-bot-email", "circle-bot-message");

			// name code
			circleTop.classList.remove("invisible");
			circleTop.classList.add("circle-top-name")
			circleBottom.classList.remove("invisible");
			circleBottom.classList.add("circle-bot-name")
		})

		formEmail.addEventListener("click", (event) => {
			// cleanup
			circleTop.classList.remove("circle-top-name", "circle-top-message" )
			circleBottom.classList.remove("circle-bot-name", "circle-bot-message");

			// mail code
			circleTop.classList.remove("invisible");
			circleTop.classList.add("circle-top-email")
			circleBottom.classList.remove("invisible");
			circleBottom.classList.add("circle-bot-email")
		})

		formMessage.addEventListener("click", (event) => {
			circleTop.classList.remove("invisible");
			circleTop.classList.add("circle-top-message")
			circleBottom.classList.remove("invisible");
			circleBottom.classList.add("circle-bot-message")
		})
	}
</script>
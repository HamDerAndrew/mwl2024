---

---

<div class="container mx-auto px-8 flex justify-center gap-2 pt-32 relative">
  <!--Contact form -->
  <div class="md:w-7/12 w-full">
    <form name="contactForm" class="flex justify-center" method="POST" data-netlify="true">
      <div class="w-full xl:text-3xl">
        <div class="mb-10 border-b-2 mwl-border">
          <input required id="name" name="name" type="text" placeholder="Name" class="autofill:bg-transparent bg-transparent w-full p-2 placeholder:text-white focus:ring focus:ring-blue-900 text-slate-50" />
        </div>
        <div class="mb-10 border-b-2 mwl-border">
          <input required id="email" name="email" type="email" placeholder="Email" class="bg-transparent w-full p-2 placeholder:text-white focus:ring focus:ring-blue-900 text-slate-50" />
        </div>
        <div class="mb-10 border-b-2 mwl-border">
          <textarea required id="message" name="message" class="bg-transparent sm:h-auto h-36 mwl-border rounded w-full p-2 md:h-96 placeholder:text-white focus:ring focus:ring-blue-900 text-slate-50" placeholder="Message"></textarea>
        </div>
        <button class="md:w-44 rounded-full w-full py-3 mwl-border border text-white transition-transform transform-gpu hover:-translate-y-1" role="button" type="submit">Send</button>
      </div>
    </form>
		<p id="submit-error" class="pt-6 text-red-400 hidden">Hmmm something went wrong. Try again.</p>
  </div>
  <!--Let us talk splash art -->
  <div class="bg-transparent relative md:flex md:justify-center md:items-center md:w-5/12 md:rounded md:overflow-hidden hidden">
    <div class="circle circle-top invisible"></div>
    <div class="circle circle-bottom invisible"></div>
  </div>
	
	<div id="loading-container" class="absolute h-full w-full z-10 mwl-background-dark hidden">
		<span class="loader block"></span>
	</div>

	<div id="submit-success" class="absolute h-full w-full z-10 mwl-background-dark hidden">
		<p class="text-slate-50 text-xl sm:text-3xl">Thank you! <br /> You will hear from us asap.</p>
	</div>
</div>

<style>

/* A fix for handling autofill styling done by browsers */
/* credit: https://css-tricks.com/almanac/selectors/a/autofill/ */
input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus {
  -webkit-text-fill-color: white;
  -webkit-box-shadow: 0 0 0px 40rem #1D232A inset;
}

.mwl-background {
	background: var(--mwl-purple);
}

.mwl-background-dark {
	background: var(--mwl-dark);
}

.mwl-border {
	border-color: var(--mwl-yellow);
}

button:hover {
	background-color: var(--mwl-purple);

}

.circle {
	position: absolute;
	width: 60px;
	height: 60px;
	border-radius: 50%;
	background-color: var(--mwl-yellow);
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
}

.circle-top-name {
	top: 10%;
	left: 20%;
	transition: all .4s ease-in-out;
}

.circle-bot-name {
	top: 90%;
	left: 80%;
	transition: all .4s ease-in-out;
}

.circle-top-email {
	top: 50%;
	left: 65%;
	transition: all .4s ease-in-out;
}

.circle-bot-email {
	top: 20%;
	left: 45%;
	transition: all .4s ease-in-out;
}


.circle-top-message {
	top: 20%;
	left: 45%;
	transition: all .4s ease-in-out;
}

.circle-bot-message {
	top: 80%;
	left: 45%;
	transition: all .4s ease-in-out;
}

.name-animation {
	padding: 50px;
}

.loader {
    width: 48px;
    height: 48px;
    background: #fff;
    border-radius: 50%;
    position: relative;
    animation: skLinRotate 1s ease-in-out infinite alternate;
  }
  .loader:after{
    content:"";
    position: absolute;
    inset: 5px;
    border-radius: 50%;
    border: 5px solid transparent;
    border-top-color: var(--mwl-purple);
  }
  @keyframes skLinRotate {
    95% ,100% { transform: rotate(840deg) }
  }
</style>

<script>
	document.addEventListener('astro:page-load', (event) => {
		const currentPath = window.location.pathname.slice(1) // Removing the "/" from path
		const successMsg = document.getElementById("submit-success")
		const errorMsg = document.getElementById("submit-error")
		const loader = document.getElementById("loading-container")
		// the double contact check is temporary. In prod there is a trailing / and that is not present in dev
		const validPaths = ["", "dk", "dk/", "dk/contact/", "dk/contact", "contact", "contact/"];

		if(validPaths.includes(currentPath)) {
			const handleSubmit = (e) => {
				e.preventDefault()
				
				const contactForm = e.target;
				const formData = new FormData(contactForm);
				loader.classList.remove("hidden")
				loader.classList.add("flex", "justify-center", "items-center")

				fetch("/", {
					method: "POST",
					headers: { "Content-Type": "application/x-www-form-urlencoded" },
					// @ts-ignore
					body: new URLSearchParams(formData).toString()
				})
				.then(() => {
					console.log("Form was submitted successfully")
					successMsg.classList.add("flex", "justify-center", "items-center")
					successMsg.classList.remove("hidden")
					loader.classList.add("hidden")
				})
				.catch((error) => {
					alert(error)
					errorMsg.classList.remove("hidden")
					errorMsg.classList.add("block")
					loader.classList.add("hidden")
				});
			}

			document.querySelector("form").addEventListener("submit", handleSubmit)
		
			myAnimation()
		}
	})
	
	function myAnimation() {
		const formName = document.getElementById("name");
		const formEmail = document.getElementById("email");
		const formMessage = document.getElementById("message");
		const circleTop = document.querySelector(".circle-top");
		const circleBottom = document.querySelector(".circle-bottom");

		/*
		TODO:
		This can be refactored into a single function.
		This should always remove other classes from previous animations of the circle (ex circle-top-name should remove circle-top-email)
		*/

		//1. Add event listener to the name input
		formName.addEventListener("click", (event) => {
			// cleanup
			circleTop.classList.remove("circle-top-email", "circle-top-message" )
			circleBottom.classList.remove("circle-bot-email", "circle-bot-message");

			// name code
			circleTop.classList.remove("invisible");
			circleTop.classList.add("circle-top-name")
			circleBottom.classList.remove("invisible");
			circleBottom.classList.add("circle-bot-name")
		})

		formEmail.addEventListener("click", (event) => {
			// cleanup
			circleTop.classList.remove("circle-top-name", "circle-top-message" )
			circleBottom.classList.remove("circle-bot-name", "circle-bot-message");

			// mail code
			circleTop.classList.remove("invisible");
			circleTop.classList.add("circle-top-email")
			circleBottom.classList.remove("invisible");
			circleBottom.classList.add("circle-bot-email")
		})

		formMessage.addEventListener("click", (event) => {
			circleTop.classList.remove("invisible");
			circleTop.classList.add("circle-top-message")
			circleBottom.classList.remove("invisible");
			circleBottom.classList.add("circle-bot-message")
		})
	}
</script>
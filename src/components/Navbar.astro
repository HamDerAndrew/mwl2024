---
import { Image } from "astro:assets";
import { getRelativeLocaleUrl } from "astro:i18n";
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(0); // remove the first "/"
import { getLangFromUrl, useTranslations } from "../i18n/utils";

interface Props {
   imagePath: string;
   altText: string;
   lang: string;
}

//Language Navigation
const homeURL = getRelativeLocaleUrl("dk", "")
const servicesURL = getRelativeLocaleUrl("dk", "services")
const aboutURL = getRelativeLocaleUrl("dk", "about")
const contactURL = getRelativeLocaleUrl("dk", "contact")

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const { imagePath, altText } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}');
if (!images[imagePath]) throw new Error(`"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`);
---

<nav class="bg-slate-50 py-6">
  <div class="flex justify-between container mx-auto px-8">
    <div class="w-32 self-center">
      <a href="/">
        <Image src={images[imagePath]()} alt={altText} />
      </a>
    </div>
    <!--Mobile Nav -->
    <div id="mobile-nav" class="sm:hidden overflow-hidden fixed z-10 bg-slate-50 h-full top-0 left-0 transition-all">
      <ul class="p-8 text-xl">
        <li class="mb-4"><a href=`${lang === "dk" ? homeURL : "/"}` class=`${currentPath === "" ? "active" : ""}`>{t('nav.home')}</a></li>
        <li class="mb-4"><a href=`${lang === "dk" ? servicesURL : "/services/"}` class=`${currentPath === "/services/" ? "active" : ""}`>Services</a></li>
        <li class="mb-4"><a href=`${lang === "dk" ? aboutURL : "/about/"}` class=`${currentPath === "/about/" ? "active" : ""}`>{t('nav.about')}</a></li>
        <li class="mb-4"><a href=`${lang === "dk" ? contactURL : "/contact/"}` class=`${currentPath === "/contact/" ? "active" : ""}`>{t('nav.contact')}</a></li>
      </ul>
      <div class="inline-block relative align-top ml-3 pl-2 pr-2">
        <ul class=" bg-slate-50 flex">
          <li class="p-2"><a href="/"><span class="icon-[emojione-v1--flag-for-united-kingdom]" style="width: 28px; height: 28px;"></span></a></li>
          <li class="p-2"><a href="/dk/"><span class="icon-[emojione-v1--flag-for-denmark]" style="width: 28px; height: 28px;"></span></a></li>
        </ul>
      </div>
    </div>
    <!--Standard Nav -->
    <div class="self-center text-lg sm:block hidden">
      <a href=`${lang === "dk" ? homeURL : "/"}` class=`mr-4 ${currentPath === "/" || currentPath === "/dk/" ? "active" : ""}`>{t('nav.home')}</a>
      <a href=`${lang === "dk" ? servicesURL : "/services/"}` class=`mr-4 ${currentPath === "/services/" || currentPath === "/dk/services/" ? "active" : ""}`>Services</a>
      <a href=`${lang === "dk" ? aboutURL : "/about/"}` class=`mr-4 ${currentPath === "/about/" || currentPath === "/dk/about/" ? "active" : ""}`>{t('nav.about')}</a>
      <a href=`${lang === "dk" ? contactURL : "/contact/"}` class=`${currentPath === "/contact/" || currentPath === "/dk/contact/" ? "active" : ""}`>{t('nav.contact')}</a>
      <div class="dropdown inline-block relative align-top ml-3 pl-2 pr-2">
        <span class=`${lang === "dk" ? "icon-[emojione-v1--flag-for-denmark]" : "icon-[emojione-v1--flag-for-united-kingdom]"}` style="width: 28px; height: 28px;"></span>
        <ul class="invisible block absolute bg-slate-50 left-0 shadow-x">
          <li class="p-2"><a href="/"><span class="icon-[emojione-v1--flag-for-united-kingdom]" style="width: 28px; height: 28px;"></span></a></li>
          <li class="p-2"><a href="/dk/"><span class="icon-[emojione-v1--flag-for-denmark]" style="width: 28px; height: 28px;"></span></a></li>
        </ul>
      </div>
    </div>
    <div id="nav-toggle" class="flex rounded transition-all md:hidden">
      <span class="icon-[mdi--menu] text-4xl"></span>
    </div>
  </div>
</nav>

<style>
  .dropdown:hover ul {
    visibility: visible;
  }
  .active {
    position: relative;
  }
  .active::after {
    content: "";
    display: block;
    position: absolute;
    height: 5px;
    background-color: var(--mwl-purple);
    bottom: -6px;
    right: 0;
    left: 0;
  }

  #mobile-nav.open {
    width: 200px;
  }

  #mobile-nav {
    width: 0;
  }

  #nav-toggle.toggle-active {
    background-color: var(--mwl-purple);
    color: #f8fafc;
  }

  .mwl-background {
	  color: var(--mwl-purple);
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const navToggle = document.getElementById("nav-toggle");
    const mobileNav = document.getElementById("mobile-nav");
    navToggle.addEventListener("click", toggleMobileNav);
    
    function toggleMobileNav() {
      mobileNav.classList.toggle("open")
      navToggle.classList.toggle("toggle-active")
    }
  })
</script>